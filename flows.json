[
    {
        "id": "bf5e655127c9578c",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f4763a9faccc7e5d",
        "type": "tab",
        "label": "Dashboard 2.0",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "349ceb200862d9ec",
        "type": "ui-base",
        "name": "ui_template.label.myDashboard",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "page",
        "navigationStyle": "default",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": 1,
        "showDisconnectNotification": true,
        "allowInstall": true
    },
    {
        "id": "32f82da62f7d827b",
        "type": "ui-theme",
        "name": "ui_template.themes.defaultTheme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "3c778dbe032c5ce3",
        "type": "ui-page",
        "name": "Weather App",
        "ui": "349ceb200862d9ec",
        "path": "/page1",
        "icon": "home",
        "layout": "grid",
        "theme": "32f82da62f7d827b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "bc0c0b81c4fa9020",
        "type": "ui-group",
        "name": "Información general",
        "page": "3c778dbe032c5ce3",
        "width": 5,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "0cdd2d881ca76402",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "weather_tab",
        "type": "ui_tab",
        "name": "Dashboard Climático - Paraná",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "info_group",
        "type": "ui_group",
        "name": "Información General",
        "tab": "weather_tab",
        "order": 1,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "362fccc6143044db",
        "type": "ui_spacer",
        "z": "bf5e655127c9578c",
        "name": "spacer",
        "group": "info_group",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "27289f15558c5425",
        "type": "ui_spacer",
        "z": "bf5e655127c9578c",
        "name": "spacer",
        "group": "info_group",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "6bc3dd51f1ddc246",
        "type": "ui_spacer",
        "z": "bf5e655127c9578c",
        "name": "spacer",
        "group": "info_group",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "a79ad5955f430178",
        "type": "ui_spacer",
        "z": "bf5e655127c9578c",
        "name": "spacer",
        "group": "info_group",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "d4eaf2d31a72c141",
        "type": "ui_spacer",
        "z": "bf5e655127c9578c",
        "name": "spacer",
        "group": "info_group",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "296f197d576a717f",
        "type": "ui-group",
        "name": "Mapa",
        "page": "3c778dbe032c5ce3",
        "width": 6,
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "bb2bf3896d71549a",
        "type": "debug",
        "z": "bf5e655127c9578c",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 80,
        "wires": []
    },
    {
        "id": "70c5ac94f46c00d3",
        "type": "debug",
        "z": "bf5e655127c9578c",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 80,
        "wires": []
    },
    {
        "id": "7c0bbc2aec9d860f",
        "type": "function",
        "z": "bf5e655127c9578c",
        "name": "Function Geocoding URL",
        "func": "// 1. Obtener la ciudad del mensaje\nconst city = msg.payload;\n\n// 2. Codificar la ciudad para URL (manejar espacios y caracteres especiales)\nconst encodedCity = encodeURIComponent(city);\n\n// 3. Construir la URL usando template literals (backticks)\nmsg.url = `http://api.openweathermap.org/geo/1.0/direct?q=${encodedCity}&limit=5&appid=029e2971fd993ff3081a6fdf47ad6f19&lang=es`;\n\n// 4. Limpiar el payload para evitar conflictos\nmsg.payload = \"\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 120,
        "wires": [
            [
                "78302da6e441ced1",
                "bb2bf3896d71549a"
            ]
        ]
    },
    {
        "id": "78302da6e441ced1",
        "type": "http request",
        "z": "bf5e655127c9578c",
        "name": "Geocoding API",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 740,
        "y": 120,
        "wires": [
            [
                "d63b93ca23c47bf1",
                "79d363965f2c9137"
            ]
        ]
    },
    {
        "id": "d63b93ca23c47bf1",
        "type": "debug",
        "z": "bf5e655127c9578c",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 80,
        "wires": []
    },
    {
        "id": "73f890d084667d65",
        "type": "http request",
        "z": "bf5e655127c9578c",
        "name": "OpenWeather API",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 870,
        "y": 280,
        "wires": [
            [
                "cd4ece94f26ed638",
                "282aebe1ec5977ef",
                "2d3115754f8edcac"
            ]
        ]
    },
    {
        "id": "cd4ece94f26ed638",
        "type": "debug",
        "z": "bf5e655127c9578c",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 180,
        "wires": []
    },
    {
        "id": "7a4ce8e770a1feac",
        "type": "debug",
        "z": "bf5e655127c9578c",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 240,
        "wires": []
    },
    {
        "id": "2d3115754f8edcac",
        "type": "link out",
        "z": "bf5e655127c9578c",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "fc67490d54bbe2f5",
            "0c82bf6651d91289"
        ],
        "x": 1055,
        "y": 380,
        "wires": []
    },
    {
        "id": "282aebe1ec5977ef",
        "type": "link out",
        "z": "bf5e655127c9578c",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "1be1f30274bf861e"
        ],
        "x": 1055,
        "y": 280,
        "wires": []
    },
    {
        "id": "6034370819b67302",
        "type": "link out",
        "z": "bf5e655127c9578c",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "8f9aed7d3a4a8d8c",
            "be7809e3a5336343"
        ],
        "x": 795,
        "y": 320,
        "wires": []
    },
    {
        "id": "3c58e9afe9934e5d",
        "type": "template",
        "z": "bf5e655127c9578c",
        "name": "Forecast URL",
        "field": "url",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "https://api.openweathermap.org/data/2.5/forecast?lat={{lat}}&lon={{lon}}&appid=029e2971fd993ff3081a6fdf47ad6f19&units=metric&lang=sp",
        "output": "str",
        "x": 200,
        "y": 480,
        "wires": [
            [
                "6e22fe0ca3650e67",
                "5a70bb53ba139132"
            ]
        ]
    },
    {
        "id": "6e22fe0ca3650e67",
        "type": "change",
        "z": "bf5e655127c9578c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 480,
        "wires": [
            [
                "889c320a80d0c795",
                "67fcc841e7c95cd9"
            ]
        ]
    },
    {
        "id": "889c320a80d0c795",
        "type": "http request",
        "z": "bf5e655127c9578c",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 630,
        "y": 480,
        "wires": [
            [
                "4f8e8579dd305220",
                "b4ea5d06525296d4"
            ]
        ]
    },
    {
        "id": "5a70bb53ba139132",
        "type": "debug",
        "z": "bf5e655127c9578c",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 440,
        "wires": []
    },
    {
        "id": "67fcc841e7c95cd9",
        "type": "debug",
        "z": "bf5e655127c9578c",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 440,
        "wires": []
    },
    {
        "id": "b4ea5d06525296d4",
        "type": "debug",
        "z": "bf5e655127c9578c",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 440,
        "wires": []
    },
    {
        "id": "4f8e8579dd305220",
        "type": "function",
        "z": "bf5e655127c9578c",
        "name": "pronostico 5 dias",
        "func": "// Asegurarnos de que tenemos los datos necesarios\nconst data = msg.payload.list;\nconst city = msg.payload.city;\n\nif (!data || !city || typeof city.timezone === 'undefined') {\n    node.error(\"Payload de entrada inválido. Faltan 'list' o 'city.timezone'.\");\n    return null; // Detener el flujo si los datos no son correctos\n}\n\nconst cityTimezoneOffset = city.timezone * 1000; // Offset en milisegundos\nconst days = {};\n\ndata.forEach(entry => {\n    // Ajustar hora UTC a zona horaria local de la ciudad\n    const utcDate = new Date(entry.dt_txt + 'Z'); // 'Z' indica que la fecha es UTC\n    const localDate = new Date(utcDate.getTime() + cityTimezoneOffset);\n\n    // --- CORRECCIÓN CLAVE ---\n    // Crear clave única usando los componentes de la fecha local ajustada.\n    // Usamos getUTCFullYear(), etc., porque nuestro objeto 'localDate' ya tiene el offset aplicado.\n    const dayKey = `${localDate.getUTCFullYear()}-${localDate.getUTCMonth() + 1}-${localDate.getUTCDate()}`;\n\n    if (!days[dayKey]) {\n        days[dayKey] = {\n            date: localDate,  // Guardamos el primer objeto Date del día para ordenar\n            temp_max: entry.main.temp,\n            temp_min: entry.main.temp,\n            icon: entry.weather[0].icon,\n            description: entry.weather[0].description,\n            pop: Math.round((entry.pop || 0) * 100),\n            wind: entry.wind.speed,\n            // Guardamos la hora para la lógica del mediodía\n            bestHour: localDate.getUTCHours() \n        };\n    } else {\n        days[dayKey].temp_max = Math.max(days[dayKey].temp_max, entry.main.temp);\n        days[dayKey].temp_min = Math.min(days[dayKey].temp_min, entry.main.temp);\n        days[dayKey].pop = Math.max(days[dayKey].pop, Math.round((entry.pop || 0) * 100));\n\n        // Actualizar ícono si esta entrada está más cerca del mediodía (12:00)\n        const currentHour = localDate.getUTCHours();\n        if (Math.abs(12 - currentHour) < Math.abs(12 - days[dayKey].bestHour)) {\n            days[dayKey].icon = entry.weather[0].icon;\n            days[dayKey].description = entry.weather[0].description;\n            days[dayKey].bestHour = currentHour;\n        }\n    }\n});\n\n// Convertir y formatear resultados\nconst forecast = Object.values(days)\n    .sort((a, b) => a.date - b.date) // Ordenar por fecha\n    .slice(0, 5) // Tomar los próximos 5 días\n    .map(day => {\n        // Formatear la fecha de manera consistente\n        // Le decimos que trate la fecha como UTC para que no aplique un segundo offset del servidor\n        const formattedDay = day.date.toLocaleDateString('es-AR', {\n            weekday: 'short',\n            day: 'numeric',\n            timeZone: 'UTC' // Mejora para evitar doble ajuste de zona horaria\n        });\n\n        return {\n            day: formattedDay.charAt(0).toUpperCase() + formattedDay.slice(1).replace('.', ''),\n            temp_max: Math.round(day.temp_max),\n            temp_min: Math.round(day.temp_min),\n            icon: day.icon,\n            description: day.description,\n            pop: day.pop,\n            wind: Math.round(day.wind) // Es buena práctica redondear también el viento\n        };\n    });\n\nmsg.forecast = forecast;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 480,
        "wires": [
            [
                "baabb039b53a2202",
                "247e5126f0f43eb3"
            ]
        ]
    },
    {
        "id": "baabb039b53a2202",
        "type": "debug",
        "z": "bf5e655127c9578c",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 440,
        "wires": []
    },
    {
        "id": "381d87ebf936e121",
        "type": "link in",
        "z": "bf5e655127c9578c",
        "name": "link in 4",
        "links": [
            "4f03c0fa1051951a",
            "c52a6da9458edbc8"
        ],
        "x": 305,
        "y": 120,
        "wires": [
            [
                "7c0bbc2aec9d860f",
                "70c5ac94f46c00d3"
            ]
        ]
    },
    {
        "id": "50d3a132abb3f8ac",
        "type": "comment",
        "z": "bf5e655127c9578c",
        "name": "Ubicación input",
        "info": "Ingreso de la uvicación\n",
        "x": 240,
        "y": 80,
        "wires": []
    },
    {
        "id": "2032303258d5db2a",
        "type": "comment",
        "z": "bf5e655127c9578c",
        "name": "Ubicación mostrada",
        "info": "",
        "x": 870,
        "y": 360,
        "wires": []
    },
    {
        "id": "e7529d3dccfaeb77",
        "type": "comment",
        "z": "bf5e655127c9578c",
        "name": "Parámetros",
        "info": "Muestra varios parámetros:\n* humedad\n* presión\n* velocidad del viento",
        "x": 1110,
        "y": 240,
        "wires": []
    },
    {
        "id": "e8e9d520780efd56",
        "type": "comment",
        "z": "bf5e655127c9578c",
        "name": "info general",
        "info": "Muestra varios parámetros:\n* condición\n* icono del clima\n* temperatura\n* ST",
        "x": 1110,
        "y": 340,
        "wires": []
    },
    {
        "id": "791cb3570cd51cfc",
        "type": "comment",
        "z": "bf5e655127c9578c",
        "name": "Tabla 1.0",
        "info": "Este template crea la tabla con el pronóstico extendido",
        "x": 1060,
        "y": 520,
        "wires": []
    },
    {
        "id": "247e5126f0f43eb3",
        "type": "link out",
        "z": "bf5e655127c9578c",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "26f8e50d81401932",
            "46962d458c74109b"
        ],
        "x": 1015,
        "y": 480,
        "wires": []
    },
    {
        "id": "a81bfe381a299ae8",
        "type": "template",
        "z": "bf5e655127c9578c",
        "name": "Current Weather URL",
        "field": "url",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "https://api.openweathermap.org/data/2.5/weather?lat={{lat}}&lon={{lon}}&appid=029e2971fd993ff3081a6fdf47ad6f19&units=metric&lang=sp\n",
        "output": "str",
        "x": 420,
        "y": 280,
        "wires": [
            [
                "defa1b25bfdad136",
                "7b953dc06222bf54"
            ]
        ]
    },
    {
        "id": "defa1b25bfdad136",
        "type": "change",
        "z": "bf5e655127c9578c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 280,
        "wires": [
            [
                "7a4ce8e770a1feac",
                "73f890d084667d65",
                "6034370819b67302"
            ]
        ]
    },
    {
        "id": "79d363965f2c9137",
        "type": "change",
        "z": "bf5e655127c9578c",
        "name": "Extraer datos",
        "rules": [
            {
                "t": "set",
                "p": "lat",
                "pt": "msg",
                "to": "payload[0].lat",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lon",
                "pt": "msg",
                "to": "payload[0].lon",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "cityName",
                "pt": "msg",
                "to": "payload[0].name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "payload[0].state",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "country",
                "pt": "msg",
                "to": "payload[0].country",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 280,
        "wires": [
            [
                "a81bfe381a299ae8",
                "828406ef2e1208af",
                "3c58e9afe9934e5d",
                "ec9a5054d2bd0c9c"
            ]
        ]
    },
    {
        "id": "828406ef2e1208af",
        "type": "debug",
        "z": "bf5e655127c9578c",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 240,
        "wires": []
    },
    {
        "id": "7b953dc06222bf54",
        "type": "debug",
        "z": "bf5e655127c9578c",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 240,
        "wires": []
    },
    {
        "id": "ec9a5054d2bd0c9c",
        "type": "link out",
        "z": "bf5e655127c9578c",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "d0da7412aa09eecb"
        ],
        "x": 335,
        "y": 320,
        "wires": []
    },
    {
        "id": "73d930eabdb1a6f2",
        "type": "comment",
        "z": "f4763a9faccc7e5d",
        "name": "Dashboard 2.0",
        "info": "Dashboard 2.0",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "3c6f88532616501b",
        "type": "ui-text-input",
        "z": "f4763a9faccc7e5d",
        "group": "bc0c0b81c4fa9020",
        "name": "Ubicación",
        "label": "Ubicación",
        "order": 1,
        "width": 5,
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": false,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "c52a6da9458edbc8"
            ]
        ]
    },
    {
        "id": "be7809e3a5336343",
        "type": "link in",
        "z": "f4763a9faccc7e5d",
        "name": "link in 6",
        "links": [
            "6034370819b67302"
        ],
        "x": 165,
        "y": 180,
        "wires": [
            [
                "da911af99d3ce078"
            ]
        ]
    },
    {
        "id": "0dbf93d3958153f4",
        "type": "ui-text",
        "z": "f4763a9faccc7e5d",
        "group": "bc0c0b81c4fa9020",
        "order": 2,
        "width": 5,
        "height": 1,
        "name": "Ubicació mostrada",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "style": true,
        "font": "",
        "fontSize": "25",
        "color": "#4d4d4d",
        "wrapText": true,
        "className": "",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "da911af99d3ce078",
        "type": "function",
        "z": "f4763a9faccc7e5d",
        "name": "function 1",
        "func": "msg.payload = msg.cityName + \", \" + msg.state + \", \" + msg.country\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 180,
        "wires": [
            [
                "0dbf93d3958153f4"
            ]
        ]
    },
    {
        "id": "c52a6da9458edbc8",
        "type": "link out",
        "z": "f4763a9faccc7e5d",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "381d87ebf936e121"
        ],
        "x": 355,
        "y": 120,
        "wires": []
    },
    {
        "id": "0c82bf6651d91289",
        "type": "link in",
        "z": "f4763a9faccc7e5d",
        "name": "link in 5",
        "links": [
            "2d3115754f8edcac"
        ],
        "x": 165,
        "y": 360,
        "wires": [
            [
                "4b288962295bf041",
                "628c1b9d14f46fec",
                "2da9b1b15288d3ba",
                "4cb9b09879d4e614"
            ]
        ]
    },
    {
        "id": "4b288962295bf041",
        "type": "function",
        "z": "f4763a9faccc7e5d",
        "name": "Mayúscula",
        "func": "let desc = msg.payload.weather[0].description;\nmsg.payload = desc.charAt(0).toUpperCase() + desc.slice(1);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 300,
        "wires": [
            [
                "9f59c4e5336f92ca"
            ]
        ]
    },
    {
        "id": "9f59c4e5336f92ca",
        "type": "ui-text",
        "z": "f4763a9faccc7e5d",
        "group": "bc0c0b81c4fa9020",
        "order": 8,
        "width": "2",
        "height": "1",
        "name": "Condición",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 540,
        "y": 300,
        "wires": []
    },
    {
        "id": "628c1b9d14f46fec",
        "type": "function",
        "z": "f4763a9faccc7e5d",
        "name": "temperatura",
        "func": "msg.payload = msg.payload.main.temp + \" ºC\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 340,
        "wires": [
            [
                "1ce6c4a0acc4a742"
            ]
        ]
    },
    {
        "id": "1ce6c4a0acc4a742",
        "type": "ui-text",
        "z": "f4763a9faccc7e5d",
        "group": "bc0c0b81c4fa9020",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "Temperatura",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "",
        "fontSize": "45",
        "color": "#ce5403",
        "wrapText": false,
        "className": "",
        "x": 550,
        "y": 340,
        "wires": []
    },
    {
        "id": "2da9b1b15288d3ba",
        "type": "function",
        "z": "f4763a9faccc7e5d",
        "name": "ST",
        "func": "msg.payload = \"ST \" + msg.payload.main.feels_like + \" ºC\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 380,
        "wires": [
            [
                "38837be4d756a321"
            ]
        ]
    },
    {
        "id": "38837be4d756a321",
        "type": "ui-text",
        "z": "f4763a9faccc7e5d",
        "group": "bc0c0b81c4fa9020",
        "order": 6,
        "width": 2,
        "height": 0,
        "name": "ST",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "",
        "fontSize": "30",
        "color": "#4f4f4f",
        "wrapText": false,
        "className": "",
        "x": 530,
        "y": 380,
        "wires": []
    },
    {
        "id": "ee804542e97df427",
        "type": "ui-template",
        "z": "f4763a9faccc7e5d",
        "group": "bc0c0b81c4fa9020",
        "page": "",
        "ui": "",
        "name": "ícono",
        "order": 3,
        "width": 1,
        "height": 3,
        "head": "",
        "format": "<img\n  :src=\"`https://openweathermap.org/img/wn/${msg.payload}@2x.png`\"\n  style=\"width: 70px; height: 70px;\"\n  alt=\"weather icon\"\n/>\n\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 530,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "4cb9b09879d4e614",
        "type": "function",
        "z": "f4763a9faccc7e5d",
        "name": "icono",
        "func": "msg.payload = msg.payload.weather[0].icon\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 440,
        "wires": [
            [
                "ee804542e97df427"
            ]
        ]
    },
    {
        "id": "e6a5438db8917425",
        "type": "link in",
        "z": "f4763a9faccc7e5d",
        "name": "link in 7",
        "links": [
            "282aebe1ec5977ef"
        ],
        "x": 165,
        "y": 540,
        "wires": [
            [
                "56aa4945740c3af5",
                "73ab6ea92a86c5b9",
                "7641976468256b55"
            ]
        ]
    },
    {
        "id": "68796504d89e02ba",
        "type": "ui-text",
        "z": "f4763a9faccc7e5d",
        "group": "bc0c0b81c4fa9020",
        "order": 9,
        "width": 2,
        "height": 0,
        "name": "Humedad",
        "label": "Humedad: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 520,
        "y": 500,
        "wires": []
    },
    {
        "id": "47de8a50fb3e26e1",
        "type": "ui-text",
        "z": "f4763a9faccc7e5d",
        "group": "bc0c0b81c4fa9020",
        "order": 7,
        "width": 2,
        "height": 0,
        "name": "Presión",
        "label": "Presión: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 520,
        "y": 540,
        "wires": []
    },
    {
        "id": "5e582caeef8a3483",
        "type": "ui-text",
        "z": "f4763a9faccc7e5d",
        "group": "bc0c0b81c4fa9020",
        "order": 5,
        "width": 2,
        "height": 0,
        "name": "Viento",
        "label": "Viento: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 510,
        "y": 580,
        "wires": []
    },
    {
        "id": "56aa4945740c3af5",
        "type": "function",
        "z": "f4763a9faccc7e5d",
        "name": "humedad",
        "func": "msg.payload = msg.payload.main.humidity + \" %\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 500,
        "wires": [
            [
                "68796504d89e02ba"
            ]
        ]
    },
    {
        "id": "73ab6ea92a86c5b9",
        "type": "function",
        "z": "f4763a9faccc7e5d",
        "name": "presion",
        "func": "msg.payload = msg.payload.main.pressure + \" hPa\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 540,
        "wires": [
            [
                "47de8a50fb3e26e1"
            ]
        ]
    },
    {
        "id": "7641976468256b55",
        "type": "function",
        "z": "f4763a9faccc7e5d",
        "name": "viento",
        "func": "msg.payload = msg.payload.wind.speed + \" m/s\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 580,
        "wires": [
            [
                "5e582caeef8a3483"
            ]
        ]
    },
    {
        "id": "46962d458c74109b",
        "type": "link in",
        "z": "f4763a9faccc7e5d",
        "name": "link in 9",
        "links": [
            "247e5126f0f43eb3"
        ],
        "x": 545,
        "y": 120,
        "wires": [
            [
                "70b502cdaaf49f0c"
            ]
        ]
    },
    {
        "id": "70b502cdaaf49f0c",
        "type": "ui-template",
        "z": "f4763a9faccc7e5d",
        "group": "bc0c0b81c4fa9020",
        "page": "",
        "ui": "",
        "name": "pronóstico",
        "order": 10,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <table style=\"width:100%; color:white; background:#222; border-radius:8px; padding:10px;\">\n    <tr style=\"text-align:left;\">\n      <th>Día</th>\n      <th>Máx / Mín</th>\n      <th>Condición</th>\n      <th>Lluvia</th>\n      <th>Viento</th>\n    </tr>\n    <tr v-for=\"(item, index) in msg.forecast\" :key=\"index\">\n      <td>{{item.day}}</td>\n      <td>{{Math.round(item.temp_max)}}° / {{Math.round(item.temp_min)}}°</td>\n      <td>\n        <img :src=\"'https://openweathermap.org/img/wn/' + item.icon + '.png'\" \n             style=\"vertical-align:middle; width:30px;\"> \n        {{item.description}}\n      </td>\n      <td>{{item.pop}}%</td>\n      <td>{{item.wind}} m/s</td>\n    </tr>\n  </table>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 710,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "ba8bdc8f14182990",
        "type": "ui-template",
        "z": "f4763a9faccc7e5d",
        "group": "296f197d576a717f",
        "page": "",
        "ui": "",
        "name": "mapa",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<div id=\"map\" style=\"height: 500px; width: 100%; border: 1px solid #ccc; position: relative;\">\n  <div id=\"loading\" style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);\n    background: rgba(255,255,255,0.9); padding: 10px; border-radius: 6px; font-family: Arial;\">\n    🗺️ Cargando mapa del clima...\n  </div>\n</div>\n\n<style>\n  img.leaflet-tile[src*=\"openstreetmap.org\"] {\n    filter: brightness(0.7) !important;\n  }\n\n  img.leaflet-tile[src*=\"clouds_new\"] {\n    filter: contrast(2) brightness(2) saturate(2) !important;\n  }\n\n  img.leaflet-tile[src*=\"precipitation_new\"] {\n    filter: hue-rotate(180deg) brightness(1.6) saturate(2) contrast(2) !important;\n  }\n\n  img.leaflet-tile[src*=\"temp_new\"] {\n    filter: contrast(2) brightness(2) saturate(2) !important;\n  }\n\n  img.leaflet-tile[src*=\"wind_new\"] {\n    filter: contrast(2) brightness(2) saturate(2) !important;\n  }\n</style>\n\n<script>\n  const API_KEY = \"029e2971fd993ff3081a6fdf47ad6f19\"; // ← tu API key\n  let map; // Variable global para el mapa\n  let currentMarker; // Variable para el marcador actual\n\n  function showMap() {\n    const mapDiv = document.getElementById(\"map\");\n    const loading = document.getElementById(\"loading\");\n    if (!mapDiv || typeof window.L === \"undefined\") {\n      console.error(\"❌ Leaflet no está disponible\");\n      return;\n    }\n\n    if (loading) loading.style.display = \"none\";\n\n    // Inicializar mapa centrado en Argentina\n    map = window.L.map(\"map\").setView([-34.6118, -58.3960], 5); // Buenos Aires, Argentina\n\n    window.L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution: \"© OpenStreetMap contributors\"\n    }).addTo(map);\n\n    const layers = {\n      \"☁️ Nubes\": window.L.tileLayer(`https://tile.openweathermap.org/map/clouds_new/{z}/{x}/{y}.png?appid=${API_KEY}`, {opacity: 1}),\n      \"🌧️ Precipitación\": window.L.tileLayer(`https://tile.openweathermap.org/map/precipitation_new/{z}/{x}/{y}.png?appid=${API_KEY}`, {opacity: 1}),\n      \"🌡️ Temperatura\": window.L.tileLayer(`https://tile.openweathermap.org/map/temp_new/{z}/{x}/{y}.png?appid=${API_KEY}`, {opacity: 1}),\n      \"💨 Viento\": window.L.tileLayer(`https://tile.openweathermap.org/map/wind_new/{z}/{x}/{y}.png?appid=${API_KEY}`, {opacity: 1})\n    };\n\n    layers[\"☁️ Nubes\"].addTo(map);\n    window.L.control.layers(null, layers, { collapsed: false }).addTo(map);\n    window.L.control.scale().addTo(map);\n\n    setTimeout(() => map.invalidateSize(), 300);\n  }\n\n  // Función para actualizar la ubicación del mapa\n  function updateMapLocation(lat, lon, cityName) {\n    if (!map) {\n      console.error(\"❌ Mapa no inicializado\");\n      return;\n    }\n    // Guardar el estado actual del zoom\n    const currentZoom = map.getZoom();\n\n    // Remover marcador anterior si existe\n    if (currentMarker) {\n      map.removeLayer(currentMarker);\n    }\n\n    // Centrar mapa en la nueva ubicación\n    map.setView([lat, lon], 10);\n\n    // Agregar marcador en la nueva ubicación\n    currentMarker = window.L.marker([lat, lon])\n      .addTo(map)\n      .bindPopup(`📍 ${cityName}`)\n      .openPopup();\n\n    console.log(`🗺️ Mapa actualizado para: ${cityName} (${lat}, ${lon})`);\n  }\n\n  function waitForLeafletAndInit(retries = 30) {\n    if (window.L && typeof window.L.map === \"function\") {\n      console.log(\"✅ Leaflet disponible como window.L\");\n      showMap();\n    } else if (retries > 0) {\n      console.log(\"⏳ Esperando window.L.map...\");\n      setTimeout(() => waitForLeafletAndInit(retries - 1), 300);\n    } else {\n      console.error(\"❌ Timeout esperando Leaflet\");\n      const loading = document.getElementById(\"loading\");\n      if (loading) loading.innerText = \"Error cargando Leaflet\";\n    }\n  }\n\n  function loadLeafletOnce() {\n    if (document.getElementById(\"leaflet-script\")) {\n      waitForLeafletAndInit();\n      return;\n    }\n\n    const css = document.createElement(\"link\");\n    css.rel = \"stylesheet\";\n    css.href = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\";\n    document.head.appendChild(css);\n\n    const js = document.createElement(\"script\");\n    js.id = \"leaflet-script\";\n    js.src = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\";\n    js.onload = () => {\n      console.log(\"📦 Leaflet script descargado\");\n      waitForLeafletAndInit();\n    };\n    js.onerror = () => {\n      console.error(\"❌ Falló la carga de Leaflet\");\n      const loading = document.getElementById(\"loading\");\n      if (loading) loading.innerText = \"Error cargando Leaflet\";\n    };\n    document.head.appendChild(js);\n  }\n\n  // Manejar mensajes entrantes de Node-RED para Dashboard 2.0\n  this.$watch('msg', function(msg) {\n    console.log(\"📨 Mensaje recibido:\", msg);\n    if (msg && msg.payload && msg.payload.lat && msg.payload.lon) {\n      const { lat, lon, cityName } = msg.payload;\n      console.log(`🎯 Actualizando mapa para: ${cityName} (${lat}, ${lon})`);\n      updateMapLocation(lat, lon, cityName || 'Ubicación');\n    }\n  }, { immediate: true });\n\n  // Esperar a que se monte el widget en dashboard 2.0\n  setTimeout(() => {\n    console.log(\"🚀 Iniciando carga del mapa\");\n    loadLeafletOnce();\n  }, 500);\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 530,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "d0da7412aa09eecb",
        "type": "link in",
        "z": "f4763a9faccc7e5d",
        "name": "link in 10",
        "links": [
            "ec9a5054d2bd0c9c"
        ],
        "x": 165,
        "y": 220,
        "wires": [
            [
                "5a449e5d86dca42d"
            ]
        ]
    },
    {
        "id": "5a449e5d86dca42d",
        "type": "function",
        "z": "f4763a9faccc7e5d",
        "name": "function 2",
        "func": "// Preparar datos para el mapa\nmsg.payload = {\n    lat: parseFloat(msg.lat),\n    lon: parseFloat(msg.lon),\n    cityName: msg.cityName || 'Ciudad desconocida',\n    state: msg.state || '',\n    country: msg.country || '',\n    mapCenter: true\n};\n\n// Log para debugging\nnode.log(`Enviando coordenadas al mapa: ${msg.payload.cityName} (${msg.payload.lat}, ${msg.payload.lon})`);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 220,
        "wires": [
            [
                "ba8bdc8f14182990"
            ]
        ]
    }
]